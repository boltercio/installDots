#!/usr/bin/env bash
#  ╦═╗╦╔═╗╔═╗  ╦╔╗╔╔═╗╔╦╗╔═╗╦  ╦  ╔═╗╦═╗
#  ╠╦╝║║  ║╣   ║║║║╚═╗ ║ ╠═╣║  ║  ║╣ ╠╦╝
#  ╩╚═╩╚═╝╚═╝  ╩╝╚╝╚═╝ ╩ ╩ ╩╩═╝╩═╝╚═╝╩╚═
#	Script to install bspwm and other tool config dotfiles
# Author: z0mbi3
# Modifier: allenmagic
#	raw_url: https://github.com/gh0stzk
# modifi_url: https://github.com/allenmagic
### ---------- Basicos scripts ---------- ### 
 
green="\e[0;32m\033[1m"           # Correct message
red="\e[0;31m\033[1m"             # Failed message
blue="\e[0;34m\033[1m"            # Normal message
yellow="\e[0;33m\033[1m"          # Warning message
purple="\e[0;35m\033[1m"          # Resalto de variable
turquoise="\e[0;36m\033[1m"
gray="\e[0;37m\033[1m"            # Color normal
end="\033[0m\e[0m"                # Final de color

trap ctrl_c INT

function ctrl_c(){
    echo -e "${Red}[!]${gray} Exiting...${end}\n"
    tput cnorm
    exit 0
}
 
function logo () {
# Letra "Calvin S" de https://www.freetool.dev/es/generador-de-letras-ascii
clear
echo -e "
╔╗ ┌─┐┬ ┌┬┐┌─┐┬─┐╔═╗┌─┐┬─┐┬┌─┐┌┬┐┌─┐
╠╩╗│ ││  │ ├┤ ├┬┘╚═╗│  ├┬┘│├─┘ │ └─┐
╚═╝└─┘┴─┘┴ └─┘┴└─╚═╝└─┘┴└─┴┴   ┴ └─┘
                        ${turquoise}By Boltercio${end}
"
}
 
function CheckUser() {
if [ $UID != 0 ]; then
    echo -e "${red}[!]${gray} This script must be run with root permissions${end}"
    while true; do
        echo -e "${yellow}[*]${gray} You want execute this script with sudo command? ${turquoise}[Y/n]${end}"
        read response
        case $response in
            [yY]* ) echo -e "${green}[+]${gray} Launching script with sudo permissions.${end}"
            sudo ./$0
            break;;
            [nN]* ) echo -e "${red}[!]${gray} Script canceled by user.${end}"
            break;;
            *) echo -e "${red}[!]${gray} invalid input.${end}";;
        esac
    done
    exit 0
fi
} 

backup_folder=~/.RiceBackup
date=$(date +%Y%m%d-%H%M%S)

########## ---------- You must not run this as root ---------- ##########

if [ "$(id -u)" = 0 ]; then
    echo "Este script NO DEBE ejecutarse como root."
    exit 1
fi

########## ---------- Welcome ---------- ##########

logo 
echo -e "${gray}Bienvenido!!${end}"
echo -e "${red}Este script comprobara si tienes instaladas las dependencias necesarias
si no lo estan las instalara. despues clonara el repositorio con los temas en tu directorio HOME. 
Despues de esto hara un backup de tus archivos de configuracion y copiara los de los nuevos temas.
Te pedira acceso como root para poder cambiar tu shell por defecto a zsh por si no lo tubieras intalado. 
Este script no tiene potencial para romper tu sistema, solo realiza modificaciones del aspecto visual.${end}"

while true; do
	read -rp " Quieres continuar? [y/N]: " yn
		case $yn in
			[Yy]* ) break;;
			[Nn]* ) exit;;
			* ) printf " Error: just write 'y' or 'n'\n\n";;
		esac
    done
clear

########## ---------- Install packages ---------- ##########

logo 
echo -e "${gray}Instalando paquetes necesarios...${end}"

dependencias=(build-essential libgtk-3-dev libdbusmenu-glib-dev libdbusmenu-gtk3-dev \
			  bspwm polybar sxhkd brightnessctl dunst rofi picom xdo xdotool jgmenu \
			  jq policykit-1-gnome git xclip \
			  feh ueberzug maim webp libwebp-dev xdg-user-dirs \
			  webp-pixbuf-loader xorg physlock papirus-icon-theme \
			  fonts-jetbrains-mono fonts-inconsolata lightdm  \
			  x11-utils x11-xserver-utils stalonetray \
			  kitty lsd bat micro zsh )

is_installed() {
    dpkg -l "$1" &> /dev/null
    return $?
}
echo -e "${blue}[*] ${gray}Comprobando paquetes requeridos...\n${end}"
for paquete in "${dependencias[@]}"
do
if ! is_installed "$paquete"; then
    sudo apt-get install -qq -y "$paquete" 
    echo -e "\n"
else
    echo -e "${green}[+] ${gray}$paquete ya esta instalado en tu sistema.${end}"
    sleep 0.5
fi
done
sleep 0.5
clear


########## ---------- Preparing Folders ---------- ##########

# Verifica si el archivo user-dirs.dirs no existe en ~/.config
if [ ! -e "$HOME/.config/user-dirs.dirs" ]; then
	xdg-user-dirs-update
	echo "${gren}[+} ${gray}Creando directorios de usuario${end}"
fi
sleep 0.5
clear

########## ---------- Cloning the Rice! ---------- ##########
logo 
echo -e "Descargando dotfiles"

repo_url="https://github.com/boltercio/dotfiles"
repo_dir="$HOME/.dotfiles"

# Verifica si el directorio del repositorio ya existe y, si es así, lo elimina
if [ -d "$repo_dir" ]; then
	echo -e "${red}[!} ${gray}Removing existing dotfiles repository\n${end}"
	rm -rf "$repo_dir"
fi

# Clona el repositorio
echo -e "Clonando archivos desde $repo_url\n"
git clone --depth=1 "$repo_url" "$repo_dir"
cd $repo_dir
stow -v .

sleep 2
clear

########## ---------- Installing plugins for zsh ---------- ##########

git clone https://github.com/zsh-users/zsh-autosuggestions.git
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh
wget https://raw.githubusercontent.com/zsh-users/zsh-history-substring-search/master/zsh-history-substring-search.zsh

[ ! -d /usr/share/zsh/plugins ] && sudo mkdir -p /usr/share/zsh/plugins
[ ! -d /usr/share/zsh/plugins/zsh-sudo ] && sudo mkdir -p /usr/share/zsh/plugins/zsh-sudo
[ ! -d /usr/share/zsh/plugins/zsh-history-substring-search ] && sudo mkdir -p /usr/share/zsh/plugins/zsh-history-substring-search
sudo mv sudo.plugin.zsh /usr/share/zsh/plugins/zsh-sudo/
sudo mv sudo-history-substring-search.zsh /usr/share/zsh/plugins/zsh-history-substring-search/
sudo mv zsh* /usr/share/zsh/plugins/

########## ---------- Installing tdrop,eww,xqp & stalonetray ---------- ##########

logo 
echo -e "instalando EWW"
# Installing Eww
if command -v eww >/dev/null 2>&1; then 
	echo -e "${green}[+] ${gray}Eww is already installed\n${end}"
else
	echo -e "${green}[+] ${gray}Instalando Eww, esto puede tardar unos 10 minutos.\n${end}"
	{
	sudo apt install curl
		cd "$HOME" || exit
		git clone https://github.com/elkowar/eww
		cd eww || exit
		curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
		. "$HOME/.cargo/env"
		cargo build --release --no-default-features --features x11
		sudo install -m 755 "$HOME/eww/target/release/eww" -t /usr/bin/
	} && {
		cd "$HOME" || exit
	    rm -rf {.cargo,.rustup,eww}
    } || {
        echo -e "${red}[!] ${gray}Fallo al installar Eww. tendras que instalarlo manualmente.\n"
        sleep 2 
    }
fi

########## --------- Changing shell to zsh ---------- ##########

logo 
echo -e "Cambiando shell predeterminada a zsh"

if [[ $SHELL != "/usr/bin/zsh" ]]; then
	echo -e "${green}[+] ${gray}Cambiando tu shell a zsh. se necesita acceso root${end}"
	# Cambia la shell a zsh
	chsh -s /usr/bin/zsh
	echo -e "${green}[+] ${gray}Shell cambiada a zsh. Por favor reinicia el sistema.${end}"
else
	echo -e "${green}[+] ${gray}Zsh ya es tu shell por defecto."
fi
zsh
